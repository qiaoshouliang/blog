[
  
   
      {
        "title"    : "zsh git的快捷键",
        "category" : "",
        "tags"     : " Git",
        "url"      : "/2018/07/09/zsh-git-%E5%BF%AB%E6%8D%B7%E9%94%AE.html",
        "date"     : "July 9, 2018",
        "excerpt"  : "<h4 id=\"git\">git</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">g</span><span class=\"o\">=</span><span class=\"s1\">'git'</span>\n</code></pre></di...",
        "content"  : "<h4 id=\"git\">git</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">g</span><span class=\"o\">=</span><span class=\"s1\">'git'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-fetch\">git fetch</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gf</span><span class=\"o\">=</span><span class=\"s1\">'git fetch'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gfa</span><span class=\"o\">=</span><span class=\"s1\">'git fetch --all --prune'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gfo</span><span class=\"o\">=</span><span class=\"s1\">'git fetch origin'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-pull\">git pull</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># git pull –rebase 这样的结局就完全不一样。—rebase 并不会产生一个commit提交,详见 https://www.cnblogs.com/wangiqngpei557/p/6056624.html</span>\n<span class=\"c\"># git pull --rebase = git fetch + git rebase</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gup</span><span class=\"o\">=</span><span class=\"s1\">'git pull --rebase'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gupv</span><span class=\"o\">=</span><span class=\"s1\">'git pull --rebase -v'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">glum</span><span class=\"o\">=</span><span class=\"s1\">'git pull upstream master'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-status\">git status</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">#显示当前目录下文件的状态，红色的问号表示git不知道这份文件是什么，需要add，绿色的A表示add的缩写。M表示有修改的文件</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gsb</span><span class=\"o\">=</span><span class=\"s1\">'git status -sb'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gsd</span><span class=\"o\">=</span><span class=\"s1\">'git svn dcommit'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gsi</span><span class=\"o\">=</span><span class=\"s1\">'git submodule init'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gsps</span><span class=\"o\">=</span><span class=\"s1\">'git show --pretty=short --show-signature'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gsr</span><span class=\"o\">=</span><span class=\"s1\">'git svn rebase'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gss</span><span class=\"o\">=</span><span class=\"s1\">'git status -s'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gst</span><span class=\"o\">=</span><span class=\"s1\">'git status'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gsu</span><span class=\"o\">=</span><span class=\"s1\">'git submodule update'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-add\">git add</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">ga</span><span class=\"o\">=</span><span class=\"s1\">'git add'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gaa</span><span class=\"o\">=</span><span class=\"s1\">'git add --all'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gapa</span><span class=\"o\">=</span><span class=\"s1\">'git add --patch'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gau</span><span class=\"o\">=</span><span class=\"s1\">'git add --update'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gap</span><span class=\"o\">=</span><span class=\"s1\">'git apply'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-stash\">git stash</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gsta</span><span class=\"o\">=</span><span class=\"s1\">'git stash save'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gstaa</span><span class=\"o\">=</span><span class=\"s1\">'git stash apply'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gstc</span><span class=\"o\">=</span><span class=\"s1\">'git stash clear'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gstd</span><span class=\"o\">=</span><span class=\"s1\">'git stash drop'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gstl</span><span class=\"o\">=</span><span class=\"s1\">'git stash list'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gstp</span><span class=\"o\">=</span><span class=\"s1\">'git stash pop'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gsts</span><span class=\"o\">=</span><span class=\"s1\">'git stash show --text'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-reset\">git reset</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># 将某个已经暂存的文件取消暂存</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grh</span><span class=\"o\">=</span><span class=\"s1\">'git reset HEAD'</span>\n\n<span class=\"c\"># 虽然在调用时加上 --hard 选项可以令 git reset 成为一个危险的命令（译注：可能导致工作目录中所有当前进度丢失！），但本例中工作目录内的文件并不会被修改。 不加选项地调用 git reset 并不危险 — 它只会修改暂存区域。</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grhh</span><span class=\"o\">=</span><span class=\"s1\">'git reset HEAD --hard'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gru</span><span class=\"o\">=</span><span class=\"s1\">'git reset --'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-commit\">git commit</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gc</span><span class=\"o\">=</span><span class=\"s1\">'git commit -v'</span>\n<span class=\"nb\">alias </span>gc!<span class=\"o\">=</span><span class=\"s1\">'git commit -v --amend'</span>\n<span class=\"nb\">alias </span>gcn!<span class=\"o\">=</span><span class=\"s1\">'git commit -v --no-edit --amend'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gca</span><span class=\"o\">=</span><span class=\"s1\">'git commit -v -a'</span>\n<span class=\"nb\">alias </span>gca!<span class=\"o\">=</span><span class=\"s1\">'git commit -v -a --amend'</span>\n<span class=\"nb\">alias </span>gcan!<span class=\"o\">=</span><span class=\"s1\">'git commit -v -a --no-edit --amend'</span>\n<span class=\"nb\">alias </span>gcans!<span class=\"o\">=</span><span class=\"s1\">'git commit -v -a -s --no-edit --amend'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcam</span><span class=\"o\">=</span><span class=\"s1\">'git commit -a -m'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcsm</span><span class=\"o\">=</span><span class=\"s1\">'git commit -s -m'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-push\">git push</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gp</span><span class=\"o\">=</span><span class=\"s1\">'git push'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gpd</span><span class=\"o\">=</span><span class=\"s1\">'git push --dry-run'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gpoat</span><span class=\"o\">=</span><span class=\"s1\">'git push origin --all &amp;&amp; git push origin --tags'</span>\ncompdef _git <span class=\"nv\">gpoat</span><span class=\"o\">=</span>git-push\n<span class=\"nb\">alias </span><span class=\"nv\">gpu</span><span class=\"o\">=</span><span class=\"s1\">'git push upstream'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gpv</span><span class=\"o\">=</span><span class=\"s1\">'git push -v'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-log\">git log</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gl</span><span class=\"o\">=</span><span class=\"s1\">'git pull'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">glg</span><span class=\"o\">=</span><span class=\"s1\">'git log --stat'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">glgp</span><span class=\"o\">=</span><span class=\"s1\">'git log --stat -p'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">glgg</span><span class=\"o\">=</span><span class=\"s1\">'git log --graph'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">glgga</span><span class=\"o\">=</span><span class=\"s1\">'git log --graph --decorate --all'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">glgm</span><span class=\"o\">=</span><span class=\"s1\">'git log --graph --max-count=10'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">glo</span><span class=\"o\">=</span><span class=\"s1\">'git log --oneline --decorate'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">glol</span><span class=\"o\">=</span><span class=\"s2\">\"git log --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit\"</span>\n<span class=\"nb\">alias </span><span class=\"nv\">glola</span><span class=\"o\">=</span><span class=\"s2\">\"git log --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit --all\"</span>\n<span class=\"nb\">alias </span><span class=\"nv\">glog</span><span class=\"o\">=</span><span class=\"s1\">'git log --oneline --decorate --graph'</span>\n<span class=\"c\"># 它会输出你的提交历史、各个分支的指向以及项目的分支分叉情况。</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gloga</span><span class=\"o\">=</span><span class=\"s1\">'git log --oneline --decorate --graph --all'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-branch\">git branch</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gb</span><span class=\"o\">=</span><span class=\"s1\">'git branch'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gba</span><span class=\"o\">=</span><span class=\"s1\">'git branch -a'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gbd</span><span class=\"o\">=</span><span class=\"s1\">'git branch -d'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gbda</span><span class=\"o\">=</span><span class=\"s1\">'git branch --no-color --merged | command grep -vE \"^(\\*|\\s*(master|develop|dev)\\s*$)\" | command xargs -n 1 git branch -d'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gbl</span><span class=\"o\">=</span><span class=\"s1\">'git blame -b -w'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gbnm</span><span class=\"o\">=</span><span class=\"s1\">'git branch --no-merged'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gbr</span><span class=\"o\">=</span><span class=\"s1\">'git branch --remote'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-merge\">git merge</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gm</span><span class=\"o\">=</span><span class=\"s1\">'git merge'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gmom</span><span class=\"o\">=</span><span class=\"s1\">'git merge origin/master'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gmt</span><span class=\"o\">=</span><span class=\"s1\">'git mergetool --no-prompt'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gmtvim</span><span class=\"o\">=</span><span class=\"s1\">'git mergetool --no-prompt --tool=vimdiff'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gmum</span><span class=\"o\">=</span><span class=\"s1\">'git merge upstream/master'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gma</span><span class=\"o\">=</span><span class=\"s1\">'git merge --abort'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-rebase\">git rebase</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">grb</span><span class=\"o\">=</span><span class=\"s1\">'git rebase'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grba</span><span class=\"o\">=</span><span class=\"s1\">'git rebase --abort'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grbc</span><span class=\"o\">=</span><span class=\"s1\">'git rebase --continue'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grbi</span><span class=\"o\">=</span><span class=\"s1\">'git rebase -i'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grbm</span><span class=\"o\">=</span><span class=\"s1\">'git rebase master'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grbs</span><span class=\"o\">=</span><span class=\"s1\">'git rebase --skip'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-checkout\">git checkout</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gcb</span><span class=\"o\">=</span><span class=\"s1\">'git checkout -b'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcf</span><span class=\"o\">=</span><span class=\"s1\">'git config --list'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcl</span><span class=\"o\">=</span><span class=\"s1\">'git clone --recursive'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gclean</span><span class=\"o\">=</span><span class=\"s1\">'git clean -fd'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gpristine</span><span class=\"o\">=</span><span class=\"s1\">'git reset --hard &amp;&amp; git clean -dfx'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcm</span><span class=\"o\">=</span><span class=\"s1\">'git checkout master'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcd</span><span class=\"o\">=</span><span class=\"s1\">'git checkout develop'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcmsg</span><span class=\"o\">=</span><span class=\"s1\">'git commit -m'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gco</span><span class=\"o\">=</span><span class=\"s1\">'git checkout'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcount</span><span class=\"o\">=</span><span class=\"s1\">'git shortlog -sn'</span>\ncompdef _git gcount\n<span class=\"nb\">alias </span><span class=\"nv\">gcp</span><span class=\"o\">=</span><span class=\"s1\">'git cherry-pick'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcpa</span><span class=\"o\">=</span><span class=\"s1\">'git cherry-pick --abort'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcpc</span><span class=\"o\">=</span><span class=\"s1\">'git cherry-pick --continue'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gcs</span><span class=\"o\">=</span><span class=\"s1\">'git commit -S'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-diff\">git diff</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gd</span><span class=\"o\">=</span><span class=\"s1\">'git diff'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gdca</span><span class=\"o\">=</span><span class=\"s1\">'git diff --cached'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gdcw</span><span class=\"o\">=</span><span class=\"s1\">'git diff --cached --word-diff'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gdct</span><span class=\"o\">=</span><span class=\"s1\">'git describe --tags `git rev-list --tags --max-count=1`'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gdt</span><span class=\"o\">=</span><span class=\"s1\">'git diff-tree --no-commit-id --name-only -r'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gdw</span><span class=\"o\">=</span><span class=\"s1\">'git diff --word-diff'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-bisect\">git bisect</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gbs</span><span class=\"o\">=</span><span class=\"s1\">'git bisect'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gbsb</span><span class=\"o\">=</span><span class=\"s1\">'git bisect bad'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gbsg</span><span class=\"o\">=</span><span class=\"s1\">'git bisect good'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gbsr</span><span class=\"o\">=</span><span class=\"s1\">'git bisect reset'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gbss</span><span class=\"o\">=</span><span class=\"s1\">'git bisect start'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-gui-citoo\">git gui citoo</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gg</span><span class=\"o\">=</span><span class=\"s1\">'git gui citool'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gga</span><span class=\"o\">=</span><span class=\"s1\">'git gui citool --amend'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-remote\">git remote</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># git remote add &lt;shortname&gt; &lt;url&gt; 添加一个新的远程 Git 仓库，同时指定一个你可以轻松引用的简写：</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gra</span><span class=\"o\">=</span><span class=\"s1\">'git remote add'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grmv</span><span class=\"o\">=</span><span class=\"s1\">'git remote rename'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grrm</span><span class=\"o\">=</span><span class=\"s1\">'git remote remove'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grset</span><span class=\"o\">=</span><span class=\"s1\">'git remote set-url'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grt</span><span class=\"o\">=</span><span class=\"s1\">'cd $(git rev-parse --show-toplevel || echo \".\")'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grup</span><span class=\"o\">=</span><span class=\"s1\">'git remote update'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">grv</span><span class=\"o\">=</span><span class=\"s1\">'git remote -v'</span>\n</code></pre></div></div>\n\n<h4 id=\"git-tag\">git tag</h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gts</span><span class=\"o\">=</span><span class=\"s1\">'git tag -s'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gtv</span><span class=\"o\">=</span><span class=\"s1\">'git tag | sort -V'</span>\n</code></pre></div></div>\n\n<p>####</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">alias </span><span class=\"nv\">gunignore</span><span class=\"o\">=</span><span class=\"s1\">'git update-index --no-assume-unchanged'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gunwip</span><span class=\"o\">=</span><span class=\"s1\">'git log -n 1 | grep -q -c \"\\-\\-wip\\-\\-\" &amp;&amp; git reset HEAD~1'</span>\n\n<span class=\"nb\">alias </span><span class=\"nv\">gwch</span><span class=\"o\">=</span><span class=\"s1\">'git whatchanged -p --abbrev-commit --pretty=medium'</span>\n<span class=\"nb\">alias </span><span class=\"nv\">gwip</span><span class=\"o\">=</span><span class=\"s1\">'git add -A; git rm $(git ls-files --deleted) 2&gt; /dev/null; git commit --no-verify -m \"--wip-- [skip ci]\"'</span>\n</code></pre></div></div>\n\n"
      } ,
   
      {
        "title"    : "Git命令",
        "category" : "",
        "tags"     : " Git",
        "url"      : "/2017/11/13/git%E5%91%BD%E4%BB%A4.html",
        "date"     : "November 13, 2017",
        "excerpt"  : "<p>我每天使用 Git ，但是很多命令记不住。</p>\n\n<p>一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。</p>\n\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png\" alt=\"img\" /></p>\n\n<p>下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。</p>\n\n<ul>\n  <li>Workspace：工作区</l...",
        "content"  : "<p>我每天使用 Git ，但是很多命令记不住。</p>\n\n<p>一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。</p>\n\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png\" alt=\"img\" /></p>\n\n<p>下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。</p>\n\n<ul>\n  <li>Workspace：工作区</li>\n  <li>Index / Stage：暂存区</li>\n  <li>Repository：仓库区（或本地仓库）</li>\n  <li>Remote：远程仓库</li>\n</ul>\n\n<h2 id=\"一新建代码库---git-init\">一、新建代码库 - git init</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># 在当前目录新建一个Git代码库</span>\n <span class=\"nv\">$ </span>git init\n\n <span class=\"c\"># 新建一个目录，将其初始化为Git代码库</span>\n <span class=\"nv\">$ </span>git init <span class=\"o\">[</span>project-name]\n\n <span class=\"c\"># 下载一个项目和它的整个代码历史</span>\n <span class=\"nv\">$ </span>git clone <span class=\"o\">[</span>url]\n\n</code></pre></div></div>\n\n<h2 id=\"二配置-git-config\">二、配置 git config</h2>\n\n<p>Git的设置文件为<code class=\"highlighter-rouge\">.gitconfig</code>，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># 显示当前的Git配置</span>\n <span class=\"nv\">$ </span>git config <span class=\"nt\">--list</span>\n\n <span class=\"c\"># 编辑Git配置文件</span>\n <span class=\"nv\">$ </span>git config <span class=\"nt\">-e</span> <span class=\"o\">[</span><span class=\"nt\">--global</span><span class=\"o\">]</span>\n\n <span class=\"c\"># 设置提交代码时的用户信息</span>\n <span class=\"nv\">$ </span>git config <span class=\"o\">[</span><span class=\"nt\">--global</span><span class=\"o\">]</span> user.name <span class=\"s2\">\"[name]\"</span>\n <span class=\"nv\">$ </span>git config <span class=\"o\">[</span><span class=\"nt\">--global</span><span class=\"o\">]</span> user.email <span class=\"s2\">\"[email address]\"</span>\n\n</code></pre></div></div>\n\n<h2 id=\"三增加删除文件-git-addrm\">三、增加/删除文件 git add/rm</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># 添加指定文件到暂存区</span>\n <span class=\"nv\">$ </span>git add <span class=\"o\">[</span>file1] <span class=\"o\">[</span>file2] ...\n\n <span class=\"c\"># 添加指定目录到暂存区，包括子目录</span>\n <span class=\"nv\">$ </span>git add <span class=\"o\">[</span><span class=\"nb\">dir</span><span class=\"o\">]</span>\n\n <span class=\"c\"># 添加当前目录的所有文件到暂存区</span>\n <span class=\"nv\">$ </span>git add <span class=\"nb\">.</span>\n\n <span class=\"c\"># 添加每个变化前，都会要求确认</span>\n <span class=\"c\"># 对于同一个文件的多处变化，可以实现分次提交</span>\n <span class=\"nv\">$ </span>git add <span class=\"nt\">-p</span>\n\n <span class=\"c\"># 删除工作区文件，并且将这次删除放入暂存区</span>\n <span class=\"nv\">$ </span>git <span class=\"nb\">rm</span> <span class=\"o\">[</span>file1] <span class=\"o\">[</span>file2] ...\n\n <span class=\"c\"># 停止追踪指定文件，但该文件会保留在工作区</span>\n <span class=\"nv\">$ </span>git <span class=\"nb\">rm</span> <span class=\"nt\">--cached</span> <span class=\"o\">[</span>file]\n\n <span class=\"c\"># 改名文件，并且将这个改名放入暂存区</span>\n <span class=\"nv\">$ </span>git <span class=\"nb\">mv</span> <span class=\"o\">[</span>file-original] <span class=\"o\">[</span>file-renamed]\n\n</code></pre></div></div>\n\n<h2 id=\"四代码提交-git-commit\">四、代码提交 git commit</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># 提交暂存区到仓库区</span>\n <span class=\"nv\">$ </span>git commit <span class=\"nt\">-m</span> <span class=\"o\">[</span>message]\n\n <span class=\"c\"># 提交暂存区的指定文件到仓库区</span>\n <span class=\"nv\">$ </span>git commit <span class=\"o\">[</span>file1] <span class=\"o\">[</span>file2] ... <span class=\"nt\">-m</span> <span class=\"o\">[</span>message]\n\n <span class=\"c\"># 提交工作区自上次commit之后的变化，直接到仓库区</span>\n <span class=\"nv\">$ </span>git commit <span class=\"nt\">-a</span>\n\n <span class=\"c\"># 提交时显示所有diff信息</span>\n <span class=\"nv\">$ </span>git commit <span class=\"nt\">-v</span>\n\n <span class=\"c\"># 使用一次新的commit，替代上一次提交</span>\n <span class=\"c\"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span>\n <span class=\"nv\">$ </span>git commit <span class=\"nt\">--amend</span> <span class=\"nt\">-m</span> <span class=\"o\">[</span>message]\n\n <span class=\"c\"># 重做上一次commit，并包括指定文件的新变化</span>\n <span class=\"nv\">$ </span>git commit <span class=\"nt\">--amend</span> <span class=\"o\">[</span>file1] <span class=\"o\">[</span>file2] ...\n\n</code></pre></div></div>\n\n<h2 id=\"五分支-git-branch\">五、分支 git branch</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># 列出所有本地分支</span>\n <span class=\"nv\">$ </span>git branch\n\n <span class=\"c\"># 列出所有远程分支</span>\n <span class=\"nv\">$ </span>git branch <span class=\"nt\">-r</span>\n\n <span class=\"c\"># 列出所有本地分支和远程分支</span>\n <span class=\"nv\">$ </span>git branch <span class=\"nt\">-a</span>\n\n <span class=\"c\"># 新建一个分支，但依然停留在当前分支</span>\n <span class=\"nv\">$ </span>git branch <span class=\"o\">[</span>branch-name]\n\n <span class=\"c\"># 新建一个分支，并切换到该分支</span>\n <span class=\"nv\">$ </span>git checkout <span class=\"nt\">-b</span> <span class=\"o\">[</span>branch]\n\n <span class=\"c\"># 新建一个分支，指向指定commit</span>\n <span class=\"nv\">$ </span>git branch <span class=\"o\">[</span>branch] <span class=\"o\">[</span>commit]\n\n <span class=\"c\"># 新建一个分支，与指定的远程分支建立追踪关系</span>\n <span class=\"nv\">$ </span>git branch <span class=\"nt\">--track</span> <span class=\"o\">[</span>branch] <span class=\"o\">[</span>remote-branch]\n\n <span class=\"c\"># 切换到指定分支，并更新工作区</span>\n <span class=\"nv\">$ </span>git checkout <span class=\"o\">[</span>branch-name]\n\n <span class=\"c\"># 切换到上一个分支</span>\n <span class=\"nv\">$ </span>git checkout -\n\n <span class=\"c\"># 建立追踪关系，在现有分支与指定的远程分支之间</span>\n <span class=\"nv\">$ </span>git branch <span class=\"nt\">--set-upstream</span> <span class=\"o\">[</span>branch] <span class=\"o\">[</span>remote-branch]\n\n <span class=\"c\"># 合并指定分支到当前分支</span>\n <span class=\"nv\">$ </span>git merge <span class=\"o\">[</span>branch]\n\n <span class=\"c\"># 选择一个commit，合并进当前分支</span>\n <span class=\"nv\">$ </span>git cherry-pick <span class=\"o\">[</span>commit]\n\n <span class=\"c\"># 删除分支</span>\n <span class=\"nv\">$ </span>git branch <span class=\"nt\">-d</span> <span class=\"o\">[</span>branch-name]\n\n <span class=\"c\"># 删除远程分支</span>\n <span class=\"nv\">$ </span>git push origin <span class=\"nt\">--delete</span> <span class=\"o\">[</span>branch-name]\n <span class=\"nv\">$ </span>git branch <span class=\"nt\">-dr</span> <span class=\"o\">[</span>remote/branch]\n\n <span class=\"c\"># 拉取远端分支到本地，并创建本地分支</span>\n <span class=\"nv\">$ </span>git pull origin develop:develop\n</code></pre></div></div>\n\n<h2 id=\"六标签-git-tag\">六、标签 git tag</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># 列出所有tag</span>\n <span class=\"nv\">$ </span>git tag\n\n <span class=\"c\"># 新建一个tag在当前commit</span>\n <span class=\"nv\">$ </span>git tag <span class=\"o\">[</span>tag]\n\n <span class=\"c\"># 新建一个tag在指定commit</span>\n <span class=\"nv\">$ </span>git tag <span class=\"o\">[</span>tag] <span class=\"o\">[</span>commit]\n\n <span class=\"c\"># 删除本地tag</span>\n <span class=\"nv\">$ </span>git tag <span class=\"nt\">-d</span> <span class=\"o\">[</span>tag]\n\n <span class=\"c\"># 删除远程tag</span>\n <span class=\"nv\">$ </span>git push origin :refs/tags/[tagName]\n\n <span class=\"c\"># 查看tag信息</span>\n <span class=\"nv\">$ </span>git show <span class=\"o\">[</span>tag]\n\n <span class=\"c\"># 提交指定tag</span>\n <span class=\"nv\">$ </span>git push <span class=\"o\">[</span>remote] <span class=\"o\">[</span>tag]\n\n <span class=\"c\"># 提交所有tag</span>\n <span class=\"nv\">$ </span>git push <span class=\"o\">[</span>remote] <span class=\"nt\">--tags</span>\n\n <span class=\"c\"># 新建一个分支，指向某个tag</span>\n <span class=\"nv\">$ </span>git checkout <span class=\"nt\">-b</span> <span class=\"o\">[</span>branch] <span class=\"o\">[</span>tag]\n \n\n</code></pre></div></div>\n\n<h2 id=\"七查看信息-git-status\">七、查看信息 git status</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># 显示有变更的文件</span>\n <span class=\"nv\">$ </span>git status\n\n <span class=\"c\"># 显示当前分支的版本历史</span>\n <span class=\"nv\">$ </span>git log\n\n <span class=\"c\"># 显示commit历史，以及每次commit发生变更的文件</span>\n <span class=\"nv\">$ </span>git log <span class=\"nt\">--stat</span>\n\n <span class=\"c\"># 搜索提交历史，根据关键词</span>\n <span class=\"nv\">$ </span>git log <span class=\"nt\">-S</span> <span class=\"o\">[</span>keyword]\n\n <span class=\"c\"># 显示某个commit之后的所有变动，每个commit占据一行</span>\n <span class=\"nv\">$ </span>git log <span class=\"o\">[</span>tag] HEAD <span class=\"nt\">--pretty</span><span class=\"o\">=</span>format:%s\n\n <span class=\"c\"># 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件</span>\n <span class=\"nv\">$ </span>git log <span class=\"o\">[</span>tag] HEAD <span class=\"nt\">--grep</span> feature\n\n <span class=\"c\"># 显示某个文件的版本历史，包括文件改名</span>\n <span class=\"nv\">$ </span>git log <span class=\"nt\">--follow</span> <span class=\"o\">[</span>file]\n <span class=\"nv\">$ </span>git whatchanged <span class=\"o\">[</span>file]\n\n <span class=\"c\"># 显示指定文件相关的每一次diff</span>\n <span class=\"nv\">$ </span>git log <span class=\"nt\">-p</span> <span class=\"o\">[</span>file]\n\n <span class=\"c\"># 显示过去5次提交</span>\n <span class=\"nv\">$ </span>git log <span class=\"nt\">-5</span> <span class=\"nt\">--pretty</span> <span class=\"nt\">--oneline</span>\n\n <span class=\"c\"># 显示所有提交过的用户，按提交次数排序</span>\n <span class=\"nv\">$ </span>git shortlog <span class=\"nt\">-sn</span>\n\n <span class=\"c\"># 显示指定文件是什么人在什么时间修改过</span>\n <span class=\"nv\">$ </span>git blame <span class=\"o\">[</span>file]\n\n <span class=\"c\"># 显示暂存区和工作区的差异</span>\n <span class=\"nv\">$ </span>git diff\n\n <span class=\"c\"># 显示暂存区和上一个commit的差异</span>\n <span class=\"nv\">$ </span>git diff <span class=\"nt\">--cached</span> <span class=\"o\">[</span>file]\n\n <span class=\"c\"># 显示工作区与当前分支最新commit之间的差异</span>\n <span class=\"nv\">$ </span>git diff HEAD\n\n <span class=\"c\"># 显示两次提交之间的差异</span>\n <span class=\"nv\">$ </span>git diff <span class=\"o\">[</span>first-branch]...[second-branch]\n\n <span class=\"c\"># 显示今天你写了多少行代码</span>\n <span class=\"nv\">$ </span>git diff <span class=\"nt\">--shortstat</span> <span class=\"s2\">\"@{0 day ago}\"</span>\n\n <span class=\"c\"># 显示某次提交的元数据和内容变化</span>\n <span class=\"nv\">$ </span>git show <span class=\"o\">[</span>commit]\n\n <span class=\"c\"># 显示某次提交发生变化的文件</span>\n <span class=\"nv\">$ </span>git show <span class=\"nt\">--name-only</span> <span class=\"o\">[</span>commit]\n\n <span class=\"c\"># 显示某次提交时，某个文件的内容</span>\n <span class=\"nv\">$ </span>git show <span class=\"o\">[</span>commit]:[filename]\n\n <span class=\"c\"># 显示当前分支的最近几次提交</span>\n <span class=\"nv\">$ </span>git reflog\n\n</code></pre></div></div>\n\n<h2 id=\"八远程同步\">八、远程同步</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># 下载远程仓库的所有变动</span>\n <span class=\"nv\">$ </span>git fetch <span class=\"o\">[</span>remote]\n\n <span class=\"c\"># 显示所有远程仓库</span>\n <span class=\"nv\">$ </span>git remote <span class=\"nt\">-v</span>\n\n <span class=\"c\"># 显示某个远程仓库的信息</span>\n <span class=\"nv\">$ </span>git remote show <span class=\"o\">[</span>remote]\n\n <span class=\"c\"># 增加一个新的远程仓库，并命名</span>\n <span class=\"nv\">$ </span>git remote add <span class=\"o\">[</span>shortname] <span class=\"o\">[</span>url]\n\n <span class=\"c\"># 取回远程仓库的变化，并与本地分支合并</span>\n <span class=\"nv\">$ </span>git pull <span class=\"o\">[</span>remote] <span class=\"o\">[</span>branch]\n\n <span class=\"c\"># 上传本地指定分支到远程仓库</span>\n <span class=\"nv\">$ </span>git push <span class=\"o\">[</span>remote] <span class=\"o\">[</span>branch]\n\n <span class=\"c\"># 强行推送当前分支到远程仓库，即使有冲突</span>\n <span class=\"nv\">$ </span>git push <span class=\"o\">[</span>remote] <span class=\"nt\">--force</span>\n\n <span class=\"c\"># 推送所有分支到远程仓库</span>\n <span class=\"nv\">$ </span>git push <span class=\"o\">[</span>remote] <span class=\"nt\">--all</span>\n\n</code></pre></div></div>\n\n<h2 id=\"九撤销\">九、撤销</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># 恢复暂存区的指定文件到工作区</span>\n <span class=\"nv\">$ </span>git checkout <span class=\"o\">[</span>file]\n\n <span class=\"c\"># 恢复某个commit的指定文件到暂存区和工作区</span>\n <span class=\"nv\">$ </span>git checkout <span class=\"o\">[</span>commit] <span class=\"o\">[</span>file]\n\n <span class=\"c\"># 恢复暂存区的所有文件到工作区</span>\n <span class=\"nv\">$ </span>git checkout <span class=\"nb\">.</span>\n\n <span class=\"c\"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span>\n <span class=\"nv\">$ </span>git reset <span class=\"o\">[</span>file]\n\n <span class=\"c\"># 重置暂存区与工作区，与上一次commit保持一致</span>\n <span class=\"nv\">$ </span>git reset <span class=\"nt\">--hard</span>\n\n <span class=\"c\"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span>\n <span class=\"nv\">$ </span>git reset <span class=\"o\">[</span>commit]\n\n <span class=\"c\"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span>\n <span class=\"nv\">$ </span>git reset <span class=\"nt\">--hard</span> <span class=\"o\">[</span>commit]\n\n <span class=\"c\"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span>\n <span class=\"nv\">$ </span>git reset <span class=\"nt\">--keep</span> <span class=\"o\">[</span>commit]\n\n <span class=\"c\"># 新建一个commit，用来撤销指定commit</span>\n <span class=\"c\"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span>\n <span class=\"nv\">$ </span>git revert <span class=\"o\">[</span>commit]\n\n <span class=\"c\"># 暂时将未提交的变化移除，稍后再移入</span>\n <span class=\"nv\">$ </span>git stash\n <span class=\"nv\">$ </span>git stash pop\n\n</code></pre></div></div>\n\n<h2 id=\"十克隆-git-clone\">十、克隆 git clone</h2>\n\n<p>远程操作的第一步，通常是从远程主机克隆一个版本库，这时就要用到<code class=\"highlighter-rouge\">git clone</code>命令。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>git clone &lt;版本库的网址\n</code></pre></div></div>\n\n<p>比如，克隆jQuery的版本库。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git clone https://github.com/jquery/jquery.git\n</code></pre></div></div>\n\n<p>该命令会在本地主机生成一个目录，与远程主机的版本库同名。如果要指定不同的目录名，可以将目录名作为<code class=\"highlighter-rouge\">git clone</code>命令的第二个参数。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git clone &lt;版本库的网址 &lt;本地目录名\n</code></pre></div></div>\n\n<p><code class=\"highlighter-rouge\">git clone</code>支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git clone http[s]://example.com/path/to/repo.git/\n <span class=\"nv\">$ </span>git clone ssh://example.com/path/to/repo.git/\n <span class=\"nv\">$ </span>git clone git://example.com/path/to/repo.git/\n <span class=\"nv\">$ </span>git clone /opt/git/project.git \n <span class=\"nv\">$ </span>git clone file:///opt/git/project.git\n <span class=\"nv\">$ </span>git clone ftp[s]://example.com/path/to/repo.git/\n <span class=\"nv\">$ </span>git clone rsync://example.com/path/to/repo.git/\n</code></pre></div></div>\n\n<p>SSH协议还有另一种写法。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git clone <span class=\"o\">[</span>user@]example.com:path/to/repo.git/\n</code></pre></div></div>\n\n<p>通常来说，Git协议下载速度最快，SSH协议用于需要用户认证的场合。各种协议优劣的详细讨论请参考<a href=\"http://git-scm.com/book/en/Git-on-the-Server-The-Protocols\">官方文档</a>。</p>\n\n<h2 id=\"十一远程-git-remote\">十一、远程 git remote</h2>\n\n<p>为了便于管理，Git要求每个远程主机都必须指定一个主机名。<code class=\"highlighter-rouge\">git remote</code>命令就用于管理主机名。</p>\n\n<p>不带选项的时候，<code class=\"highlighter-rouge\">git remote</code>命令列出所有远程主机。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git remote origin\n</code></pre></div></div>\n\n<p>使用<code class=\"highlighter-rouge\">-v</code>选项，可以参看远程主机的网址。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git remote <span class=\"nt\">-v</span>\n origin  git@github.com:jquery/jquery.git <span class=\"o\">(</span>fetch<span class=\"o\">)</span>\n origin  git@github.com:jquery/jquery.git <span class=\"o\">(</span>push<span class=\"o\">)</span>\n</code></pre></div></div>\n\n<p>上面命令表示，当前只有一台远程主机，叫做origin，以及它的网址。</p>\n\n<p>克隆版本库的时候，所使用的远程主机自动被Git命名为<code class=\"highlighter-rouge\">origin</code>。如果想用其他的主机名，需要用<code class=\"highlighter-rouge\">git clone</code>命令的<code class=\"highlighter-rouge\">-o</code>选项指定。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git clone <span class=\"nt\">-o</span> jQuery https://github.com/jquery/jquery.git\n <span class=\"nv\">$ </span>git remote jQuery\n</code></pre></div></div>\n\n<p>上面命令表示，克隆的时候，指定远程主机叫做jQuery。</p>\n\n<p><code class=\"highlighter-rouge\">git remote show</code>命令加上主机名，可以查看该主机的详细信息。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git remote show &lt;主机名\n</code></pre></div></div>\n\n<p><code class=\"highlighter-rouge\">git remote add</code>命令用于添加远程主机。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git remote add &lt;主机名 &lt;网址\n</code></pre></div></div>\n\n<p><code class=\"highlighter-rouge\">git remote rm</code>命令用于删除远程主机。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git remote <span class=\"nb\">rm</span> &lt;主机名\n</code></pre></div></div>\n\n<p><code class=\"highlighter-rouge\">git remote rename</code>命令用于远程主机的改名。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git remote rename &lt;原主机名 &lt;新主机名\n</code></pre></div></div>\n\n<p>尝试删除本地版本库上那些失效的远程追踪分支</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git remote prune origin <span class=\"nt\">--dry-run</span>\n</code></pre></div></div>\n\n<p>删除本地版本库上那些失效的远程追踪分支</p>\n\n<pre><code class=\"language-SHELL\">git remote prune origin \n</code></pre>\n\n<h2 id=\"十二git-fetch\">十二、git fetch</h2>\n\n<p>一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地，这时就要用到<code class=\"highlighter-rouge\">git fetch</code>命令。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git fetch &lt;远程主机名\n\n</code></pre></div></div>\n\n<p>上面命令将某个远程主机的更新，全部取回本地。</p>\n\n<p><code class=\"highlighter-rouge\">git fetch</code>命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响。</p>\n\n<p>默认情况下，<code class=\"highlighter-rouge\">git fetch</code>取回所有分支（branch）的更新。如果只想取回特定分支的更新，可以指定分支名。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git fetch &lt;远程主机名 &lt;分支名\n\n</code></pre></div></div>\n\n<p>比如，取回<code class=\"highlighter-rouge\">origin</code>主机的<code class=\"highlighter-rouge\">master</code>分支。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git fetch origin master\n\n</code></pre></div></div>\n\n<p>所取回的更新，在本地主机上要用”远程主机名/分支名”的形式读取。比如<code class=\"highlighter-rouge\">origin</code>主机的<code class=\"highlighter-rouge\">master</code>，就要用<code class=\"highlighter-rouge\">origin/master</code>读取。</p>\n\n<p><code class=\"highlighter-rouge\">git branch</code>命令的<code class=\"highlighter-rouge\">-r</code>选项，可以用来查看远程分支，<code class=\"highlighter-rouge\">-a</code>选项查看所有分支。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git branch <span class=\"nt\">-r</span>\n origin/master\n\n <span class=\"nv\">$ </span>git branch <span class=\"nt\">-a</span>\n <span class=\"k\">*</span> master\n   remotes/origin/master\n\n</code></pre></div></div>\n\n<p>上面命令表示，本地主机的当前分支是<code class=\"highlighter-rouge\">master</code>，远程分支是<code class=\"highlighter-rouge\">origin/master</code>。</p>\n\n<p>取回远程主机的更新以后，可以在它的基础上，使用<code class=\"highlighter-rouge\">git checkout</code>命令创建一个新的分支。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git checkout <span class=\"nt\">-b</span> newBrach origin/master\n\n</code></pre></div></div>\n\n<p>上面命令表示，在<code class=\"highlighter-rouge\">origin/master</code>的基础上，创建一个新分支。</p>\n\n<p>此外，也可以使用<code class=\"highlighter-rouge\">git merge</code>命令或者<code class=\"highlighter-rouge\">git rebase</code>命令，在本地分支上合并远程分支。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git merge origin/master\n <span class=\"c\"># 或者</span>\n <span class=\"nv\">$ </span>git rebase origin/master\n\n</code></pre></div></div>\n\n<p>上面命令表示在当前分支上，合并<code class=\"highlighter-rouge\">origin/master</code>。</p>\n\n<h2 id=\"十三git-pull\">十三、git pull</h2>\n\n<p><code class=\"highlighter-rouge\">git pull</code>命令的作用是，取回远程主机某个分支的更新，再与本地的指定分支合并。它的完整格式稍稍有点复杂。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git pull &lt;远程主机名 &lt;远程分支名:&lt;本地分支名\n\n</code></pre></div></div>\n\n<p>比如，取回<code class=\"highlighter-rouge\">origin</code>主机的<code class=\"highlighter-rouge\">next</code>分支，与本地的<code class=\"highlighter-rouge\">master</code>分支合并，需要写成下面这样。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git pull origin next:master\n\n</code></pre></div></div>\n\n<p>如果远程分支是与当前分支合并，则冒号后面的部分可以省略。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git pull origin next\n\n</code></pre></div></div>\n\n<p>上面命令表示，取回<code class=\"highlighter-rouge\">origin/next</code>分支，再与当前分支合并。实质上，这等同于先做<code class=\"highlighter-rouge\">git fetch</code>，再做<code class=\"highlighter-rouge\">git merge</code>。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git fetch origin\n <span class=\"nv\">$ </span>git merge origin/next\n\n</code></pre></div></div>\n\n<p>在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在<code class=\"highlighter-rouge\">git clone</code>的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的<code class=\"highlighter-rouge\">master</code>分支自动”追踪”<code class=\"highlighter-rouge\">origin/master</code>分支。</p>\n\n<p>Git也允许手动建立追踪关系。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> git branch <span class=\"nt\">--set-upstream</span> master origin/next\n\n</code></pre></div></div>\n\n<p>上面命令指定<code class=\"highlighter-rouge\">master</code>分支追踪<code class=\"highlighter-rouge\">origin/next</code>分支。</p>\n\n<p>如果当前分支与远程分支存在追踪关系，<code class=\"highlighter-rouge\">git pull</code>就可以省略远程分支名。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git pull origin\n\n</code></pre></div></div>\n\n<p>上面命令表示，本地的当前分支自动与对应的<code class=\"highlighter-rouge\">origin</code>主机”追踪分支”（remote-tracking branch）进行合并。</p>\n\n<p>如果当前分支只有一个追踪分支，连远程主机名都可以省略。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git pull\n\n</code></pre></div></div>\n\n<p>上面命令表示，当前分支自动与唯一一个追踪分支进行合并。</p>\n\n<p>如果合并需要采用rebase模式，可以使用<code class=\"highlighter-rouge\">--rebase</code>选项。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git pull <span class=\"nt\">--rebase</span> &lt;远程主机名 &lt;远程分支名:&lt;本地分支名\n\n</code></pre></div></div>\n\n<p>如果远程主机删除了某个分支，默认情况下，<code class=\"highlighter-rouge\">git pull</code> 不会在拉取远程分支的时候，删除对应的本地分支。这是为了防止，由于其他人操作了远程主机，导致<code class=\"highlighter-rouge\">git pull</code>不知不觉删除了本地分支。</p>\n\n<p>但是，你可以改变这个行为，加上参数 <code class=\"highlighter-rouge\">-p</code> 就会在本地删除远程已经删除的分支。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git pull <span class=\"nt\">-p</span>\n <span class=\"c\"># 等同于下面的命令</span>\n <span class=\"nv\">$ </span>git fetch <span class=\"nt\">--prune</span> origin \n <span class=\"nv\">$ </span>git fetch <span class=\"nt\">-p</span>\n\n</code></pre></div></div>\n\n<h2 id=\"十四git-push\">十四、git push</h2>\n\n<p><code class=\"highlighter-rouge\">git push</code>命令用于将本地分支的更新，推送到远程主机。它的格式与<code class=\"highlighter-rouge\">git pull</code>命令相仿。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;\n</code></pre></div></div>\n\n<p>注意，分支推送顺序的写法是&lt;来源地:&lt;目的地，所以<code class=\"highlighter-rouge\">git pull</code>是&lt;远程分支:&lt;本地分支，而<code class=\"highlighter-rouge\">git push</code>是&lt;本地分支:&lt;远程分支。</p>\n\n<p>如果省略远程分支名，则表示将本地分支推送与之存在”追踪关系”的远程分支（通常两者同名），如果该远程分支不存在，则会被新建。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git push origin master\n</code></pre></div></div>\n\n<p>上面命令表示，将本地的<code class=\"highlighter-rouge\">master</code>分支推送到<code class=\"highlighter-rouge\">origin</code>主机的<code class=\"highlighter-rouge\">master</code>分支。如果后者不存在，则会被新建。</p>\n\n<p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git push origin :master\n <span class=\"c\"># 等同于</span>\n <span class=\"nv\">$ </span>git push origin <span class=\"nt\">--delete</span> master\n</code></pre></div></div>\n\n<p>上面命令表示删除<code class=\"highlighter-rouge\">origin</code>主机的<code class=\"highlighter-rouge\">master</code>分支。</p>\n\n<p>如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git push origin\n</code></pre></div></div>\n\n<p>上面命令表示，将当前分支推送到<code class=\"highlighter-rouge\">origin</code>主机的对应分支。</p>\n\n<p>如果当前分支只有一个追踪分支，那么主机名都可以省略。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git push\n</code></pre></div></div>\n\n<p>如果当前分支与多个主机存在追踪关系，则可以使用<code class=\"highlighter-rouge\">-u</code>选项指定一个默认主机，这样后面就可以不加任何参数使用<code class=\"highlighter-rouge\">git push</code>。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git push <span class=\"nt\">-u</span> origin master\n</code></pre></div></div>\n\n<p>上面命令将本地的<code class=\"highlighter-rouge\">master</code>分支推送到<code class=\"highlighter-rouge\">origin</code>主机，同时指定<code class=\"highlighter-rouge\">origin</code>为默认主机，后面就可以不加任何参数使用<code class=\"highlighter-rouge\">git push</code>了。</p>\n\n<p>不带任何参数的<code class=\"highlighter-rouge\">git push</code>，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方法，现在改为默认采用simple方式。如果要修改这个设置，可以采用<code class=\"highlighter-rouge\">git config</code>命令。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git config <span class=\"nt\">--global</span> push.default matching\n <span class=\"c\"># 或者</span>\n <span class=\"nv\">$ </span>git config <span class=\"nt\">--global</span> push.default simple\n</code></pre></div></div>\n\n<p>还有一种情况，就是不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用<code class=\"highlighter-rouge\">--all</code>选项。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git push <span class=\"nt\">--all</span> origin\n</code></pre></div></div>\n\n<p>上面命令表示，将所有本地分支都推送到<code class=\"highlighter-rouge\">origin</code>主机。</p>\n\n<p>如果远程主机的版本比本地版本更新，推送时Git会报错，要求先在本地做<code class=\"highlighter-rouge\">git pull</code>合并差异，然后再推送到远程主机。这时，如果你一定要推送，可以使用<code class=\"highlighter-rouge\">--force</code>选项。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git push <span class=\"nt\">--force</span> origin \n</code></pre></div></div>\n\n<p>上面命令使用<code class=\"highlighter-rouge\">--force</code>选项，结果导致远程主机上更新的版本被覆盖。除非你很确定要这样做，否则应该尽量避免使用<code class=\"highlighter-rouge\">--force</code>选项。</p>\n\n<p>最后，<code class=\"highlighter-rouge\">git push</code>不会推送标签（tag），除非使用<code class=\"highlighter-rouge\">--tags</code>选项。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git push origin <span class=\"nt\">--tags</span>\n</code></pre></div></div>\n\n<h2 id=\"十五子模块-git-submodule\">十五、子模块 git submodule</h2>\n\n<h3 id=\"1-添加子模块\">1. 添加子模块</h3>\n\n<p>进入 <code class=\"highlighter-rouge\">MainProject</code> 使用 <strong>git submodule add</strong> 进行添加,操作命令：</p>\n\n<pre><code class=\"language-Shell\">git clone https://github.com/imtianx/MainProject.git\ncd MainProject/\ngit submodule add https://github.com/imtianx/liba.git\ngit submodule add https://github.com/imtianx/libb.git\n</code></pre>\n\n<p>添加 <code class=\"highlighter-rouge\">liba</code> <code class=\"highlighter-rouge\">libb</code> 子模块。 <code class=\"highlighter-rouge\">.gitmodules</code> 中存放的为子模块的信息，使用 <code class=\"highlighter-rouge\">cat</code> 或 <code class=\"highlighter-rouge\">vim</code> 查看内容为：</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[submodule \"liba\"]\n\tpath = liba\n\turl = https://github.com/imtianx/liba.git\n[submodule \"libb\"]\n\tpath = libb\n\turl = https://github.com/imtianx/libb.git\n\n</code></pre></div></div>\n\n<blockquote>\n  <p><strong>.gitmodules文件</strong>：保存项目 URL 与已经拉取的本地目录之间的映射，有多个子模块则含有多条记录，会随着版本控制一起被拉去和推送的。</p>\n</blockquote>\n\n<p>此时文件目录树如下：</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>.\n├── README.md\n├── liba\n│   ├── README.md\n│   ├── a.txt\n│   └── a2.txt\n├── libb\n│   ├── README.md\n│   ├── b.txt\n│   └── b2.txt\n└── test.text\n\n\n</code></pre></div></div>\n\n<p>最后，<strong>提交添加的子模块到主目录</strong></p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git commit -m \"add liba and libb submodules\"\n[master 6b15e30] add liba and libb submodules\n 3 files changed, 8 insertions(+)\n create mode 100644 .gitmodules\n create mode 160000 liba\n create mode 160000 libb\n\n</code></pre></div></div>\n\n<h3 id=\"2-更新子模块\">2. 更新子模块</h3>\n\n<p>往往子模块是单独开发的，这里以更新 <code class=\"highlighter-rouge\">liba</code> 为例（为了测试，这里先在liba仓库添加了一个文件）：</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>cd liba/\ngit fetch\ngit merge origin/master\n\n</code></pre></div></div>\n\n<p>此外，还可以在主目录下 直接用下面的命令更新 <code class=\"highlighter-rouge\">libb</code>子模块：</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git submodule update --remote liba\n</code></pre></div></div>\n\n<p><strong>使用下面的方式，更新所有子模块：</strong></p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git submodule update --remote\n</code></pre></div></div>\n\n<h3 id=\"3-删除子模块\">3. 删除子模块</h3>\n\n<p>在日常开发中，有添加，当然也会有删除 子模块的需求。 这里主项目包含两个子模块：<code class=\"highlighter-rouge\">liba</code>、<code class=\"highlighter-rouge\">libb</code>，以删除 <code class=\"highlighter-rouge\">liba</code> 为例说明：</p>\n\n<ul>\n  <li>使用 <code class=\"highlighter-rouge\">git rm --cached liba</code> 将liba 从版本控制中删除（本地仍保留有），若不需要可不带 <code class=\"highlighter-rouge\">--cached</code>进行完全删除。</li>\n  <li>使用 <code class=\"highlighter-rouge\">vim .gitmodules</code> 可打开vim编辑,删除对应的内容</li>\n</ul>\n\n<pre><code class=\"language-Shell\"> [submodule \"liba\"]\n          path = liba\n          url = https://github.com/imtianx/liba.git\n          branch = dev\n</code></pre>\n\n<ul>\n  <li>使用 <code class=\"highlighter-rouge\">vim .git/config</code> 可打开vim编辑,删除对应的内容</li>\n</ul>\n\n<pre><code class=\"language-Shell\">[submodule \"liba\"]\n         url = https://github.com/imtianx/liba.git\n         active = true\n</code></pre>\n\n<ul>\n  <li>使用 <code class=\"highlighter-rouge\">rm -rf .git/modules/liba</code>, 删除.git下的缓存模块，最后提交项目。</li>\n</ul>\n\n<p>经过上面的删除后还可以进行添加子模块。</p>\n\n<h3 id=\"4-克隆含子模块的仓库\">4. 克隆含子模块的仓库</h3>\n\n<p>若需要克隆含有子模块的仓库，直接 进行克隆是无法拉取之模块的代码，可加上 <strong>–recursive</strong>参数，如下：</p>\n\n<pre><code class=\"language-Shell\">git clone --recursive https://github.com/imtianx/MainProject.git\n</code></pre>\n\n<p>或者使用下面的三部操作：</p>\n\n<pre><code class=\"language-Shell\">git clone  https://github.com/imtianx/MainProject.git\ngit submodule init\ngit submodule update\n</code></pre>\n\n<h2 id=\"十五其他\">十五、其他</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># 生成一个可供发布的压缩包</span>\n <span class=\"nv\">$ </span>git archive\n</code></pre></div></div>\n\n<h1 id=\"git-错误解决方法\">git 错误解决方法</h1>\n\n<p>错误：</p>\n\n<div class=\"language-verilog highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">error</span><span class=\"o\">:</span> <span class=\"n\">RPC</span> <span class=\"n\">failed</span><span class=\"o\">;</span> <span class=\"n\">curl</span> <span class=\"mi\">18</span> <span class=\"n\">transfer</span> <span class=\"n\">closed</span> <span class=\"k\">with</span> <span class=\"n\">outstanding</span> <span class=\"n\">read</span> <span class=\"n\">data</span> <span class=\"n\">remaining</span>\n\n<span class=\"nl\">fatal:</span> <span class=\"n\">The</span> <span class=\"n\">remote</span> <span class=\"k\">end</span> <span class=\"n\">hung</span> <span class=\"n\">up</span> <span class=\"n\">unexpectedly</span>\n\n<span class=\"nl\">fatal:</span> <span class=\"n\">early</span> <span class=\"n\">EOF</span>\n\n<span class=\"nl\">fatal:</span> <span class=\"n\">index</span><span class=\"o\">-</span><span class=\"n\">pack</span> <span class=\"n\">failed</span>\n\n</code></pre></div></div>\n\n<p>解决办法：</p>\n\n<p>修改Git的传输字节限制即可。</p>\n\n<p># git config –global http.postBuffer  524288000</p>\n"
      } ,
   
      {
        "title"    : "Sample post",
        "category" : "",
        "tags"     : " Test, Lorem, Ipsum",
        "url"      : "/2014/11/30/sample-post.html",
        "date"     : "November 30, 2014",
        "excerpt"  : "<p>Consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. \nPraesent et diam eget libero egestas mattis sit amet vitae augue. Nam ti...",
        "content"  : "<p>Consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. \nPraesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. \n<!--more-->\nDonec ut libero sed arcu vehicula ultricies a non tortor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut gravida lorem.</p>\n\n<ul>\n  <li>Consectetur adipiscing elit</li>\n  <li>Donec a diam lectus</li>\n  <li>Sed sit amet ipsum mauris</li>\n</ul>\n\n<p>Ut turpis felis, pulvinar a semper sed, adipiscing id dolor. Pellentesque auctor nisi id magna consequat sagittis. Curabitur dapibus enim sit amet elit pharetra tincidunt feugiat nisl imperdiet. Ut convallis libero in urna ultrices accumsan. Donec sed odio eros. Donec viverra mi quis quam pulvinar at malesuada arcu rhoncus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. In rutrum accumsan ultricies. Mauris vitae nisi at sem facilisis semper ac in est.</p>\n\n<p>Nunc diam velit, adipiscing ut tristique vitae, sagittis vel odio. Maecenas convallis ullamcorper ultricies. Curabitur ornare, ligula <em>semper consectetur sagittis</em>, nisi diam iaculis velit, id fringilla sem nunc vel mi. Nam dictum, odio nec pretium volutpat, arcu ante placerat erat, non tristique elit urna et turpis. Quisque mi metus, ornare sit amet fermentum et, tincidunt et orci. Fusce eget orci a orci congue vestibulum.</p>\n\n<p>Ut dolor diam, elementum et vestibulum eu, porttitor vel elit. Curabitur venenatis pulvinar tellus gravida ornare. Sed et erat faucibus nunc euismod ultricies ut id justo. Nullam cursus suscipit nisi, et ultrices justo sodales nec. Fusce venenatis facilisis lectus ac semper. Aliquam at massa ipsum. Quisque bibendum purus convallis nulla ultrices ultricies. Nullam aliquam, mi eu aliquam tincidunt, purus velit laoreet tortor, viverra pretium nisi quam vitae mi. Fusce vel volutpat elit. Nam sagittis nisi dui.</p>\n\n<blockquote>\n  <p>Suspendisse lectus leo, consectetur in tempor sit amet, placerat quis neque</p>\n</blockquote>\n\n<p>Etiam luctus porttitor lorem, sed suscipit est rutrum non. Curabitur lobortis nisl a enim congue semper. Aenean commodo ultrices imperdiet. Vestibulum ut justo vel sapien venenatis tincidunt.</p>\n\n<p>Phasellus eget dolor sit amet ipsum dapibus condimentum vitae quis lectus. Aliquam ut massa in turpis dapibus convallis. Praesent elit lacus, vestibulum at malesuada et, ornare et est. Ut augue nunc, sodales ut euismod non, adipiscing vitae orci. Mauris ut placerat justo. Mauris in ultricies enim. Quisque nec est eleifend nulla ultrices egestas quis ut quam. Donec sollicitudin lectus a mauris pulvinar id aliquam urna cursus. Cras quis ligula sem, vel elementum mi. Phasellus non ullamcorper urna.</p>\n"
      } ,
   
      {
        "title"    : "Feature images",
        "category" : "",
        "tags"     : " Test",
        "url"      : "/2014/11/29/feature-images.html",
        "date"     : "November 29, 2014",
        "excerpt"  : "<p>This is an example of a post which includes a feature image specified in the front matter of the post. The feature image spans the full-width of the page, and is shown with the title on permalink pages.</p>\n\n",
        "content"  : "<p>This is an example of a post which includes a feature image specified in the front matter of the post. The feature image spans the full-width of the page, and is shown with the title on permalink pages.</p>\n\n"
      } ,
   
      {
        "title"    : "Markdown and HTML",
        "category" : "",
        "tags"     : " Test, Markdown",
        "url"      : "/2014/11/28/markdown-and-html.html",
        "date"     : "November 28, 2014",
        "excerpt"  : "<p>Jekyll supports the use of <a href=\"http://daringfireball.net/projects/markdown/syntax\">Markdown</a> with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sampl...",
        "content"  : "<p>Jekyll supports the use of <a href=\"http://daringfireball.net/projects/markdown/syntax\">Markdown</a> with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows.</p>\n\n<p>Tables have also been extended from Markdown:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>First Header</th>\n      <th>Second Header</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Content Cell</td>\n      <td>Content Cell</td>\n    </tr>\n    <tr>\n      <td>Content Cell</td>\n      <td>Content Cell</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Here’s an example of an image, which is included using Markdown:</p>\n\n<p><img src=\"/assets/img/pexels/book-glass.jpeg\" alt=\"Image of a glass on a book\" /></p>\n\n<p>Highlighting for code in Jekyll is done using Base16 or Rouge. This theme makes use of Rouge by default.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-js\" data-lang=\"js\"><span class=\"c1\">// count to ten</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">10</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// count to twenty</span>\n<span class=\"kd\">var</span> <span class=\"nx\">j</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"nx\">j</span> <span class=\"o\">&lt;</span> <span class=\"mi\">20</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">j</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">j</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>Type on Strap uses KaTeX to display maths. Equations such as <script type=\"math/tex\">S_n = a \\times \\frac{1-r^n}{1-r}</script> can be displayed inline.</p>\n\n<p>Alternatively, they can be shown on a new line:</p>\n\n<script type=\"math/tex; mode=display\">f(x) = \\int \\frac{2x^2+4x+6}{x-2}</script>\n"
      } ,
   
      {
        "title"    : "Markup: Syntax Highlighting",
        "category" : "",
        "tags"     : " code",
        "url"      : "/2014/08/08/Markup-Syntax-Highlighting.html",
        "date"     : "August 8, 2014",
        "excerpt"  : "<p>From Michael’s Rose <a href=\"https://mmistakes.github.io/minimal-mistakes/markup-syntax-highlighting\">Minimal Mistakes</a>.\nSyntax highlighting is a feature that displays source code, in different colors and fonts according to the category of t...",
        "content"  : "<p>From Michael’s Rose <a href=\"https://mmistakes.github.io/minimal-mistakes/markup-syntax-highlighting\">Minimal Mistakes</a>.\nSyntax highlighting is a feature that displays source code, in different colors and fonts according to the category of terms. This feature facilitates writing in a structured language such as a programming language or a markup language as both structures and syntax errors are visually distinct. <a href=\"http://en.wikipedia.org/wiki/Syntax_highlighting\">Highlighting</a> does not affect the meaning of the text itself; it is intended only for human readers.</p>\n\n<h3 id=\"gfm-code-blocks\">GFM Code Blocks</h3>\n\n<p>GitHub Flavored Markdown <a href=\"https://help.github.com/articles/creating-and-highlighting-code-blocks/\">fenced code blocks</a> are supported. To modify styling and highlight colors edit <code class=\"highlighter-rouge\">/_sass/syntax.scss</code>.</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">#container</span> <span class=\"p\">{</span>\n  <span class=\"nl\">float</span><span class=\"p\">:</span> <span class=\"nb\">left</span><span class=\"p\">;</span>\n  <span class=\"nl\">margin</span><span class=\"p\">:</span> <span class=\"m\">0</span> <span class=\"m\">-240px</span> <span class=\"m\">0</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n  <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"m\">100%</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<figure class=\"highlight\"><pre><code class=\"language-scss\" data-lang=\"scss\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"code\"><pre><span class=\"nc\">.highlight</span> <span class=\"p\">{</span>\n  <span class=\"nl\">margin</span><span class=\"p\">:</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n  <span class=\"nl\">padding</span><span class=\"p\">:</span> <span class=\"m\">1em</span><span class=\"p\">;</span>\n  <span class=\"nl\">font-family</span><span class=\"p\">:</span> <span class=\"nv\">$monospace</span><span class=\"p\">;</span>\n  <span class=\"nl\">font-size</span><span class=\"p\">:</span> <span class=\"nv\">$type-size-7</span><span class=\"p\">;</span>\n  <span class=\"nl\">line-height</span><span class=\"p\">:</span> <span class=\"m\">1</span><span class=\"mi\">.8</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></pre></td></tr></tbody></table></code></pre></figure>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;nav</span> <span class=\"na\">class=</span><span class=\"s\">\"pagination\"</span> <span class=\"na\">role=</span><span class=\"s\">\"navigation\"</span><span class=\"nt\">&gt;</span>\n  {% if page.previous %}\n    <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"{{ site.url }}{{ page.previous.url }}\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn\"</span> <span class=\"na\">title=</span><span class=\"s\">\"{{ page.previous.title }}\"</span><span class=\"nt\">&gt;</span>Previous article<span class=\"nt\">&lt;/a&gt;</span>\n  {% endif %}\n  {% if page.next %}\n    <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"{{ site.url }}{{ page.next.url }}\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn\"</span> <span class=\"na\">title=</span><span class=\"s\">\"{{ page.next.title }}\"</span><span class=\"nt\">&gt;</span>Next article<span class=\"nt\">&lt;/a&gt;</span>\n  {% endif %}\n<span class=\"nt\">&lt;/nav&gt;</span><span class=\"c\">&lt;!-- /.pagination --&gt;</span>\n</code></pre></div></div>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">module</span> <span class=\"nn\">Jekyll</span>\n  <span class=\"k\">class</span> <span class=\"nc\">TagIndex</span> <span class=\"o\">&lt;</span> <span class=\"no\">Page</span>\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"n\">site</span><span class=\"p\">,</span> <span class=\"n\">base</span><span class=\"p\">,</span> <span class=\"n\">dir</span><span class=\"p\">,</span> <span class=\"n\">tag</span><span class=\"p\">)</span>\n      <span class=\"vi\">@site</span> <span class=\"o\">=</span> <span class=\"n\">site</span>\n      <span class=\"vi\">@base</span> <span class=\"o\">=</span> <span class=\"n\">base</span>\n      <span class=\"vi\">@dir</span> <span class=\"o\">=</span> <span class=\"n\">dir</span>\n      <span class=\"vi\">@name</span> <span class=\"o\">=</span> <span class=\"s1\">'index.html'</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"vi\">@name</span><span class=\"p\">)</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">read_yaml</span><span class=\"p\">(</span><span class=\"no\">File</span><span class=\"p\">.</span><span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"n\">base</span><span class=\"p\">,</span> <span class=\"s1\">'_layouts'</span><span class=\"p\">),</span> <span class=\"s1\">'tag_index.html'</span><span class=\"p\">)</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">data</span><span class=\"p\">[</span><span class=\"s1\">'tag'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">tag</span>\n      <span class=\"n\">tag_title_prefix</span> <span class=\"o\">=</span> <span class=\"n\">site</span><span class=\"p\">.</span><span class=\"nf\">config</span><span class=\"p\">[</span><span class=\"s1\">'tag_title_prefix'</span><span class=\"p\">]</span> <span class=\"o\">||</span> <span class=\"s1\">'Tagged: '</span>\n      <span class=\"n\">tag_title_suffix</span> <span class=\"o\">=</span> <span class=\"n\">site</span><span class=\"p\">.</span><span class=\"nf\">config</span><span class=\"p\">[</span><span class=\"s1\">'tag_title_suffix'</span><span class=\"p\">]</span> <span class=\"o\">||</span> <span class=\"s1\">'&amp;#8211;'</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">data</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">tag_title_prefix</span><span class=\"si\">}#{</span><span class=\"n\">tag</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">data</span><span class=\"p\">[</span><span class=\"s1\">'description'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"An archive of posts tagged </span><span class=\"si\">#{</span><span class=\"n\">tag</span><span class=\"si\">}</span><span class=\"s2\">.\"</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<h3 id=\"code-blocks-in-lists\">Code Blocks in Lists</h3>\n\n<p>Indentation matters. Be sure the indent of the code block aligns with the first non-space character after the list item marker (e.g., <code class=\"highlighter-rouge\">1.</code>). Usually this will mean indenting 3 spaces instead of 4.</p>\n\n<ol>\n  <li>Do step 1.</li>\n  <li>\n    <p>Now do this:</p>\n\n    <div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">print_hi</span><span class=\"p\">(</span><span class=\"nb\">name</span><span class=\"p\">)</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"Hi, </span><span class=\"si\">#{</span><span class=\"nb\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"k\">end</span>\n<span class=\"n\">print_hi</span><span class=\"p\">(</span><span class=\"s1\">'Tom'</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; prints 'Hi, Tom' to STDOUT.</span>\n</code></pre></div>    </div>\n  </li>\n  <li>Now you can do this.</li>\n</ol>\n\n<h3 id=\"github-gist-embed\">GitHub Gist Embed</h3>\n\n<p>An example of a Gist embed below.</p>\n\n<script src=\"https://gist.github.com/mmistakes/77c68fbb07731a456805a7b473f47841.js\"></script>\n\n<h3 id=\"source\">Source</h3>\n\n"
      } ,
   
      {
        "title"    : "Generate a table of content",
        "category" : "",
        "tags"     : " toc.js, kramdown, Markdown, Customization",
        "url"      : "/2013/12/12/Generate-a-table-of-content.html",
        "date"     : "December 12, 2013",
        "excerpt"  : "<p>Test article, get the source on <a href=\"https://github.com/Sylhare/Type-on-Strap/blob/gh-pages/_posts/2013-12-12-toc.js-for-table-of-content.md\">github</a>.</p>\n\n<h1 id=\"using-kramdown-gfm\">Using Kramdown GFM</h1>\n\n<!-- To be placed at the beg...",
        "content"  : "<p>Test article, get the source on <a href=\"https://github.com/Sylhare/Type-on-Strap/blob/gh-pages/_posts/2013-12-12-toc.js-for-table-of-content.md\">github</a>.</p>\n\n<h1 id=\"using-kramdown-gfm\">Using Kramdown GFM</h1>\n\n<!-- To be placed at the beginning of the post, it is where the table of content will be generated -->\n<ul id=\"markdown-toc\">\n  <li><a href=\"#using-kramdown-gfm\" id=\"markdown-toc-using-kramdown-gfm\">Using Kramdown GFM</a>    <ul>\n      <li><a href=\"#basic-usage\" id=\"markdown-toc-basic-usage\">Basic Usage</a></li>\n    </ul>\n  </li>\n  <li><a href=\"#using-tocjs\" id=\"markdown-toc-using-tocjs\">Using toc.js</a>    <ul>\n      <li><a href=\"#customize-with-tocjs\" id=\"markdown-toc-customize-with-tocjs\">Customize with toc.js</a>        <ul>\n          <li><a href=\"#use-with-this-jekyll-template\" id=\"markdown-toc-use-with-this-jekyll-template\">Use with this jekyll template</a></li>\n        </ul>\n      </li>\n      <li><a href=\"#basic-usage-1\" id=\"markdown-toc-basic-usage-1\">Basic Usage</a></li>\n      <li><a href=\"#how-it-would-look-like\" id=\"markdown-toc-how-it-would-look-like\">How it would look like</a></li>\n    </ul>\n  </li>\n</ul>\n\n<h2 id=\"basic-usage\">Basic Usage</h2>\n\n<p>You need to put this at the beginning of the page where you want the table of content to be displayed</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>* TOC\n{:toc}\n</code></pre></div></div>\n\n<p>It will then render the markdown and html titles (lines that begins with <code class=\"highlighter-rouge\">#</code> or using the <code class=\"highlighter-rouge\">&lt;h1&gt;&lt;/h1&gt;</code> tages)</p>\n\n<h1 id=\"using-tocjs\">Using toc.js</h1>\n\n<p>Demo display of <a href=\"https://github.com/ghiculescu/jekyll-table-of-contents\">jekyll-table-of-contents</a> by ghiculescu.</p>\n\n<!-- To be placed at the beginning of the post, it is where the table of content will be generated -->\n<div id=\"toc\"></div>\n\n<h2 id=\"customize-with-tocjs\">Customize with toc.js</h2>\n\n<p><a href=\"https://github.com/ghiculescu/jekyll-table-of-contents\">toc.js</a> stands for table of content, it is a js plugin that generates automatically a table of content of a post.</p>\n\n<h3 id=\"use-with-this-jekyll-template\">Use with this jekyll template</h3>\n\n<p>If you want to customize the theme it is up to you, you can add the <code class=\"highlighter-rouge\">toc.js</code> file into the <code class=\"highlighter-rouge\">asset &gt; js</code> and add it into the <code class=\"highlighter-rouge\">page.html</code> layout with:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/assets/js/toc.js\"</span> <span class=\"nt\">&gt;&lt;/script&gt;</span>\n</code></pre></div></div>\n<p>Then you can use it as it is said on the repository.</p>\n\n<h2 id=\"basic-usage-1\">Basic Usage</h2>\n\n<p>The script requires jQuery. First, reference toc.js in templates where you would like to add the table of content. Then, create an HTML element wherever you want your table of contents to appear:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"toc\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n</code></pre></div></div>\n\n<p>Then you put your post with titles and all like:</p>\n\n<div class=\"language-apiblueprint highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gu\">## Title</span>\n<span class=\"gu\">## Mid title 1</span>\nThis is text on page one\n<span class=\"gu\">## Mid title 2</span>\nThis is text for page two\n<span class=\"gu\">### Sub title 2.a</span>\nSome more text\n</code></pre></div></div>\n\n<p>Then at the end of your post, you call the .toc() function using:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">'#toc'</span><span class=\"p\">).</span><span class=\"nx\">toc</span><span class=\"p\">();</span>\n<span class=\"p\">});</span>\n<span class=\"nt\">&lt;/script&gt;</span>\n</code></pre></div></div>\n\n<h2 id=\"how-it-would-look-like\">How it would look like</h2>\n\n<p><img src=\"https://user-images.githubusercontent.com/20642750/39189661-c22099f2-47a0-11e8-826e-2ec3ef4cc4f4.png\" alt=\"image\" /></p>\n\n<script>\n// toc.js \n// Copied here for the example, can be placed in assets/js for real use in your template.\n// https://github.com/ghiculescu/jekyll-table-of-contents\n(function($){\n  $.fn.toc = function(options) {\n    var defaults = {\n      noBackToTopLinks: false,\n      title: '<i>Jump to...</i>',\n      minimumHeaders: 3,\n      headers: 'h1, h2, h3, h4, h5, h6',\n      listType: 'ol', // values: [ol|ul]\n      showEffect: 'show', // values: [show|slideDown|fadeIn|none]\n      showSpeed: 'slow', // set to 0 to deactivate effect\n      classes: { list: '',\n                 item: ''\n               }\n    },\n    settings = $.extend(defaults, options);\n\n    function fixedEncodeURIComponent (str) {\n      return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n        return '%' + c.charCodeAt(0).toString(16);\n      });\n    }\n\n    function createLink (header) {\n      var innerText = (header.textContent === undefined) ? header.innerText : header.textContent;\n      return \"<a href='#\" + fixedEncodeURIComponent(header.id) + \"'>\" + innerText + \"</a>\";\n    }\n\n    var headers = $(settings.headers).filter(function() {\n      // get all headers with an ID\n      var previousSiblingName = $(this).prev().attr( \"name\" );\n      if (!this.id && previousSiblingName) {\n        this.id = $(this).attr( \"id\", previousSiblingName.replace(/\\./g, \"-\") );\n      }\n      return this.id;\n    }), output = $(this);\n    if (!headers.length || headers.length < settings.minimumHeaders || !output.length) {\n      $(this).hide();\n      return;\n    }\n\n    if (0 === settings.showSpeed) {\n      settings.showEffect = 'none';\n    }\n\n    var render = {\n      show: function() { output.hide().html(html).show(settings.showSpeed); },\n      slideDown: function() { output.hide().html(html).slideDown(settings.showSpeed); },\n      fadeIn: function() { output.hide().html(html).fadeIn(settings.showSpeed); },\n      none: function() { output.html(html); }\n    };\n\n    var get_level = function(ele) { return parseInt(ele.nodeName.replace(\"H\", \"\"), 10); };\n    var highest_level = headers.map(function(_, ele) { return get_level(ele); }).get().sort()[0];\n    var return_to_top = '<i class=\"icon-arrow-up back-to-top\"> </i>';\n\n    var level = get_level(headers[0]),\n      this_level,\n      html = settings.title + \" <\" +settings.listType + \" class=\\\"\" + settings.classes.list +\"\\\">\";\n    headers.on('click', function() {\n      if (!settings.noBackToTopLinks) {\n        window.location.hash = this.id;\n      }\n    })\n    .addClass('clickable-header')\n    .each(function(_, header) {\n      this_level = get_level(header);\n      if (!settings.noBackToTopLinks && this_level === highest_level) {\n        $(header).addClass('top-level-header').after(return_to_top);\n      }\n      if (this_level === level) // same level as before; same indenting\n        html += \"<li class=\\\"\" + settings.classes.item + \"\\\">\" + createLink(header);\n      else if (this_level <= level){ // higher level than before; end parent ol\n        for(var i = this_level; i < level; i++) {\n          html += \"</li></\"+settings.listType+\">\"\n        }\n        html += \"<li class=\\\"\" + settings.classes.item + \"\\\">\" + createLink(header);\n      }\n      else if (this_level > level) { // lower level than before; expand the previous to contain a ol\n        for(i = this_level; i > level; i--) {\n          html += \"<\" + settings.listType + \" class=\\\"\" + settings.classes.list +\"\\\">\" +\n                  \"<li class=\\\"\" + settings.classes.item + \"\\\">\"\n        }\n        html += createLink(header);\n      }\n      level = this_level; // update for the next one\n    });\n    html += \"</\"+settings.listType+\">\";\n    if (!settings.noBackToTopLinks) {\n      $(document).on('click', '.back-to-top', function() {\n        $(window).scrollTop(0);\n        window.location.hash = '';\n      });\n    }\n\n    render[settings.showEffect]();\n  };\n})(jQuery);\n</script>\n\n<!-- To be copied at the end of the post to render the table of content -->\n<script type=\"text/javascript\">\n$(document).ready(function() {\n    $('#toc').toc();\n});\n</script>\n\n"
      } 
   
   
  
]